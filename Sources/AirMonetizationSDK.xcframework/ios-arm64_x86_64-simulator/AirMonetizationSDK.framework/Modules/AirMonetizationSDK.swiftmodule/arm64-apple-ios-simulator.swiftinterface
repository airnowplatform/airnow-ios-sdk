// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AirMonetizationSDK
import AVFoundation
import AdSupport
@_exported import AirMonetizationSDK
import AirMonetizationSDK_Private
import AppTrackingTransparency
import CommonCrypto
import CoreLocation
import CoreTelephony
import EventKit
import Foundation
import MessageUI
import MobileCoreServices
import StoreKit
import Swift
import SystemConfiguration
import UIKit
import WebKit
import _Concurrency
@_inheritsConvenienceInitializers @objc final public class AirMonetizationAdapterSettings : ObjectiveC.NSObject {
  @objc final public class var sdkVersion: Swift.String {
    @objc get
  }
  @objc final public var APIKey: Swift.String
  @objc final public var appID: Swift.String
  @objc final public var testMode: Swift.Bool
  @objc final public var placementName: Swift.String?
  @objc dynamic override public init()
  @objc final public func setupSDK() -> Swift.Bool
  @objc deinit
}
@objc extension AirMonetizationSDK.AirMonetizationAdapterSettings {
  @objc final public class func instance(from dictionary: [Swift.AnyHashable : Any]) throws -> AirMonetizationSDK.AirMonetizationAdapterSettings
  @objc final public func toDictionary() throws -> [Swift.AnyHashable : Any]
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor(unsafe) public class AirMonetizationRewarded : AirMonetizationSDK.AirMotetizationAd {
  @objc @_Concurrency.MainActor(unsafe) public class func rewarded(placementName: Swift.String) -> AirMonetizationSDK.AirMotetizationAd?
  @objc @_Concurrency.MainActor(unsafe) override public func setPlacementName(placementName: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) override public func setUserId(userId: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) override public func setSource(source: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor(unsafe) public class AirMonetizationInappBanner : AirMonetizationSDK.AirMotetizationAd {
  @objc @_Concurrency.MainActor(unsafe) public class func inappBanner(withBannerSize bannerSize: AirMonetizationSDK.AirMonetizationBannerSize = .init(width: 320, height: 50)) -> AirMonetizationSDK.AirMotetizationAd?
  @objc @_Concurrency.MainActor(unsafe) public class func inappBanner(withBannerSize bannerSize: AirMonetizationSDK.AirMonetizationBannerSize = .init(width: 320, height: 50), placementName: Swift.String) -> AirMonetizationSDK.AirMotetizationAd?
  @objc @_Concurrency.MainActor(unsafe) override public func setPlacementName(placementName: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) override public func setSource(source: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc public enum AirMonetizationAdType : Swift.Int {
  case InappBanner
  case InlineBanner
  case Interstitial
  case VAST
  case Rewarded
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor(unsafe) public class AirMonetizationInlileBanner : AirMonetizationSDK.AirMotetizationAd {
  @objc @_Concurrency.MainActor(unsafe) public class func inlineBanner(bannerView: UIKit.UIView, withBannerSize bannerSize: AirMonetizationSDK.AirMonetizationBannerSize = .init(width: 320, height: 50)) -> AirMonetizationSDK.AirMotetizationAd?
  @objc @_Concurrency.MainActor(unsafe) public class func inlineBanner(bannerView: UIKit.UIView, withBannerSize bannerSize: AirMonetizationSDK.AirMonetizationBannerSize = .init(width: 320, height: 50), placementName: Swift.String) -> AirMonetizationSDK.AirMotetizationAd?
  @objc @_Concurrency.MainActor(unsafe) override public func setPlacementName(placementName: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) override public func setSource(source: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor(unsafe) public class AirMotetizationAd : UIKit.UIViewController {
  @objc @_Concurrency.MainActor(unsafe) weak public var delegate: AirMonetizationSDK.AirMonetizationAdDelegate?
  @objc @_Concurrency.MainActor(unsafe) weak public var rewardDelegate: AirMonetizationSDK.AirMonetizationRewardedAdDelegate?
  @objc @_Concurrency.MainActor(unsafe) public var isCanOpen: Swift.Bool {
    get
  }
  @objc @_Concurrency.MainActor(unsafe) public var requestAdType: AirMonetizationSDK.AirMonetizationAdType {
    get
  }
  @objc @_Concurrency.MainActor(unsafe) public func setPlacementName(placementName: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) public func setUserId(userId: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) public func setSource(source: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) public func load()
  @objc @_Concurrency.MainActor(unsafe) public func show()
  @objc @_Concurrency.MainActor(unsafe) public func dismiss()
  @objc @_Concurrency.MainActor(unsafe) public func stop()
  @objc @_Concurrency.MainActor(unsafe) public func removeFromViewController()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc public protocol AirMonetizationAdDelegate {
  @objc func adDidStartLoad(ad: AirMonetizationSDK.AirMotetizationAd)
  @objc func adDidFinishLoad(ad: AirMonetizationSDK.AirMotetizationAd)
  @objc func adDidShow(ad: AirMonetizationSDK.AirMotetizationAd)
  @objc func adDidClick(ad: AirMonetizationSDK.AirMotetizationAd)
  @objc func adDidClose(ad: AirMonetizationSDK.AirMotetizationAd)
  @objc func adDidComplete(ad: AirMonetizationSDK.AirMotetizationAd)
  @objc func adDidDismiss(ad: AirMonetizationSDK.AirMotetizationAd)
  @objc func adDidFailWithError(ad: AirMonetizationSDK.AirMotetizationAd, error: Swift.String)
  @objc func adDidShowFailWithError(ad: AirMonetizationSDK.AirMotetizationAd, error: Swift.String)
}
@objc public protocol AirMonetizationRewardedAdDelegate {
  @objc func rewardedAdDidStartLoad(ad: AirMonetizationSDK.AirMotetizationAd)
  @objc func rewardedAdDidFinishLoad(ad: AirMonetizationSDK.AirMotetizationAd, rewardName: Swift.String, rewardValue: Swift.Int)
  @objc func rewardedAdDidReceiveReward(ad: AirMonetizationSDK.AirMotetizationAd, rewardName: Swift.String, rewardValue: Swift.Int)
  @objc func rewardedAdDidShow(ad: AirMonetizationSDK.AirMotetizationAd)
  @objc func rewardedAdDidClick(ad: AirMonetizationSDK.AirMotetizationAd)
  @objc func rewardedAdDidClose(ad: AirMonetizationSDK.AirMotetizationAd)
  @objc func rewardedAdDidComplete(ad: AirMonetizationSDK.AirMotetizationAd)
  @objc func rewardedAdDidDismiss(ad: AirMonetizationSDK.AirMotetizationAd)
  @objc func rewardedAdDidFailWithError(ad: AirMonetizationSDK.AirMotetizationAd, error: Swift.String)
  @objc func rewardedAdDidShowFailWithError(ad: AirMonetizationSDK.AirMotetizationAd, error: Swift.String)
}
@objc final public class AirMonetizationBannerSize : ObjectiveC.NSObject {
  @objc final public var width: Swift.Int
  @objc final public var height: Swift.Int
  @objc public init(width: Swift.Int, height: Swift.Int)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class AirMonetization : ObjectiveC.NSObject {
  @objc public static let shared: AirMonetizationSDK.AirMonetization
  @objc public var sdkVersion: Swift.String {
    @objc get
  }
  @objc public func setAPIKey(key: Swift.String, appID: Swift.String)
  @objc public func isSdkInitialized() -> Swift.Bool
  @objc public func setTestMode(testMode: Swift.Bool)
  @objc public var isTestMode: Swift.Bool {
    @objc get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor(unsafe) public class AirMonetizationVAST : AirMonetizationSDK.AirMotetizationAd {
  @objc @_Concurrency.MainActor(unsafe) public class func vastVideo() -> AirMonetizationSDK.AirMotetizationAd?
  @objc @_Concurrency.MainActor(unsafe) public class func vastVideo(placementName: Swift.String) -> AirMonetizationSDK.AirMotetizationAd?
  @objc @_Concurrency.MainActor(unsafe) override public func setPlacementName(placementName: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) override public func setSource(source: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor(unsafe) public class AirMonetizationInterstitial : AirMonetizationSDK.AirMotetizationAd {
  @objc @_Concurrency.MainActor(unsafe) public class func interstitial() -> AirMonetizationSDK.AirMotetizationAd?
  @objc @_Concurrency.MainActor(unsafe) public class func interstitial(placementName: Swift.String) -> AirMonetizationSDK.AirMotetizationAd?
  @objc @_Concurrency.MainActor(unsafe) override public func setPlacementName(placementName: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) override public func setSource(source: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension AirMonetizationSDK.AirMonetizationAdType : Swift.Equatable {}
extension AirMonetizationSDK.AirMonetizationAdType : Swift.Hashable {}
extension AirMonetizationSDK.AirMonetizationAdType : Swift.RawRepresentable {}
